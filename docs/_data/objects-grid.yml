grid-layout-vars:
  - var: "--grid-col-num"
    output: "auto-fill"
    description: "Creates as many columns necessary to fill the available space as determined by the child elements."
  - var: "--sidebar-col"
    output: "minmax(7.5rem, 15rem)"
    description: "Sets a minimum and maximum width for the sidebar column."
  - var: "--content-col"
    output: "minmax(min-content, 50rem)"
    description: "Sets a minimum and maximum width for the content column."
  - var: "--header-row"
    output: "minmax(5rem, min-content)"
    description: "Sets a minimum and maximum height for the header row."
  - var: "--content-row"
    output: "minmax(20rem, max-content)"
    description: "Sets a minimum and maximum height for the content row."

grid-gap:
  - prefix: "d-gcg"
    values: 0, 2, 4, 6, 8, 12, 16, 24, 32, 48, 64
  - prefix: "d-grg"
    values: 0, 2, 4, 6, 8, 12, 16, 24, 32, 48, 64
  - prefix: "d-gg"
    values: 0, 2, 4, 6, 8, 12, 16, 24, 32, 48, 64

grid-col-template:
  - class: ".d-gtc-auto"
    output: "grid-template-columns: auto;"
    description: "Sets grid column tracks to largest minimal size available. If no other column tracks are specified, it's equilavent to 100%."
  - class: ".d-gtc-value"
    output: "grid-template-columns: var(--grid-template-col);"
    description: "Declares explicit column track sizes and line names. The default CSS variable value is <span class='dds-docs--code'>[full-start] repeat(auto-fill, [col-start] minmax(10rem, auto) [col-end]) [full-end]</span>."
  - class: ".d-gtc-inherit"
    output: "grid-template-columns: inherit;"
    description: "Inherits the value from a parent element."
  - class: ".d-gtc-initial"
    output: "grid-template-columns: initial;"
    description: "Resets the value to the initial element value."
  - class: ".d-gtc-unset"
    output: "grid-template-columns: unset;"
    description: "Unsets the value, properly selecting inherit or initial."

grid-col-auto:
  - class: ".d-gac-auto"
    output: "grid-auto-columns: auto;"
    description: "Creates implicit column track sizes to largest minimal size available. If no other column tracks are specified, it's equilavent to 100%."
  - class: ".d-gac-value"
    output: "grid-auto-columns: var(--grid-auto-col);"
    description: "Defines columns within the implicit grid. The default value is <span class='dds-docs--code'>1fr</span>."
  - class: ".d-gac-inherit"
    output: "grid-auto-columns: inherit;"
    description: "Inherits the value from a parent element."
  - class: ".d-gac-initial"
    output: "grid-auto-columns: initial;"
    description: "Resets the value to the initial element value."
  - class: ".d-gac-unset"
    output: "grid-auto-columns: unset;"
    description: "Unsets the value, properly selecting inherit or initial."

grid-row-template:
  - class: ".d-gtr-auto"
    output: "grid-template-rows: auto;"
    description: "Sets grid row tracks to automatically size based on their content."
  - class: ".d-gtr-value"
    output: "grid-template-rows: var(--grid-template-row);"
    description: "Declares explicit row tracks and line names. The default CSS variable value is <span class='dds-docs--code'>repeat(auto-fit, [row-start] minmax(5rem, auto))</span>."
  - class: ".d-gtr-inherit"
    output: "grid-template-rows: inherit;"
    description: "Inherits the value from a parent element."
  - class: ".d-gtr-initial"
    output: "grid-template-rows: initial;"
    description: "Resets the CSS property to its initial value."
  - class: ".d-gtr-unset"
    output: "grid-template-rows: unset;"
    description: "Unsets the value, properly selecting inherit or initial."

grid-row-auto:
  - class: ".d-gar-auto"
    output: "grid-auto-rows: auto;"
    description: "Creates implicit row track sizes to largest minimal size available. If no other row tracks are specified, it's equilavent to 100%."
  - class: ".d-gar-value"
    output: "grid-auto-rows: var(--grid-auto-row);"
    description: "Defines rows within the implicit grid. Default value is <span class='dds-docs--code'>[row-start] minmax(10rem, max-content) [row-end]</span>."
  - class: ".d-gar-inherit"
    output: "grid-auto-rows: inherit;"
    description: "Inherits grid auto row value from the parent element."
  - class: ".d-gar-initial"
    output: "grid-auto-rows: initial;"
    description: "Resets grid auto row to its initial, default value."
  - class: ".d-gar-unset"
    output: "grid-auto-rows: unset;"
    description: "Unsets grid auto row to its default value."

grid-areas:
  - class: ".d-ga-value"
    output: "grid-area: var(--grid-area);"
    description: "Using a CSS variable (<span class='dds-docs--code'>--grid-area</span>), state a grid item's size and location within the grid by stating a line, name, span, or nothing (default) to its grid placement."
  - class: ".d-ga-inherit"
    output: "grid-area: inherit;"
    description: "Inherits the grid area from the parent element."
  - class: ".d-ga-initial"
    output: "grid-area: initial;"
    description: "Resets the grid area to its initial, default value."
  - class: ".d-ga-unset"
    output: "grid-area: unset;"
    description: "Unsets the grid area to its default value."

grid-flow:
  - class: ".d-gaf-row"
    output: "grid-auto-flow: row;"
    description: "Fills in each row in turn, adding new rows as necessary. <em>This is the default value.</em>"
  - class: ".d-gaf-column"
    output: "grid-auto-flow: column;"
    description: "Fills in each column in turn, adding new columns as necessary."
  - class: ".d-gaf-dense"
    output: "grid-auto-flow: dense;"
    description: "Uses a 'dense' packing algoithm, attempting to fill in holes within the grid if smaller items come later in the DOM order. This may cause items to appear out-of-order, but fill in spaces left by larger grid items."

grid-gji:
  - class: ".d-gji-auto"
    output: "justify-items: auto;"
    description: "Uses the justify-items property value of the grid parent, unless the box has no parent or is absolutely positioned, in which case auto is set to normal."
  - class: ".d-gji-end"
    output: "justify-items: end;"
    description: "Grid items are placed toward the container's end edge along the appropriate axis."
  - class: ".d-gji-center"
    output: "justify-items: center;"
    description: "Grid items are placed toward the container's center along the appropriate axis."
  - class: ".d-gji-start"
    output: "justify-items: start;"
    description: "Grid items are placed toward the container's start edge along the appropriate axis."
  - class: ".d-gji-stretch"
    output: "justify-items: stretch;"
    description: "Grid items containers are stretched equally (not proportionally) so that exactly fill the alignment contianer."
  - class: ".d-gji-unset"
    output: "justify-items: unset;"
    description: "Resets the value to either it's initial value or inherited value."

grid-gai:
  - class: ".d-gai-normal"
    output: "align-items: normal;"
    description: "Resets the layout mode to the normal behavior, which for grid items typically means a behavior similar to stretch."
  - class: ".d-gai-end"
    output: "align-items: end;"
    description: "Grid items are placed toward the container's end edge along the appropriate axis."
  - class: ".d-gai-center"
    output: "align-items: center;"
    description: "Grid items are placed toward the container's center along the appropriate axis."
  - class: ".d-gai-start"
    output: "align-items: start;"
    description: "Grid items are placed toward the container's start edge along the appropriate axis."
  - class: ".d-gai-stretch"
    output: "align-items: stretch;"
    description: "Grid items containers are stretched equally (not proportionally) so that exactly fill the alignment contianer."
  - class: ".d-gai-unset"
    output: "align-items: unset;"
    description: "Resets the value to either it's initial value or inherited value."

grid-gpi:
  - class: ".d-gpi-normal"
    output: "place-items: normal;"
    description: "Resets the layout mode to the normal behavior, which for grid items typically means a behavior similar to stretch."
  - class: ".d-gpi-end"
    output: "place-items: end;"
    description: "Grid items are placed toward the container's end edge along the appropriate axis."
  - class: ".d-gpi-center"
    output: "place-items: center;"
    description: "Grid items are placed toward the container's center along the appropriate axis."
  - class: ".d-gpi-start"
    output: "place-items: start;"
    description: "Grid items are placed toward the container's start edge along the appropriate axis."
  - class: ".d-gpi-stretch"
    output: "place-items: stretch;"
    description: "Grid items containers are stretched equally (not proportionally) so that exactly fill the alignment contianer."
  - class: ".d-gpi-value"
    output: "place-items: var(--gpi);"
    description: "Use this class if you want to set different property values for the inline (row) and block (column) axis."
  - class: ".d-gpi-unset"
    output: "place-items: unset;"
    description: "Resets the value to either it's initial value or inherited value."

grid-gjc:
  - class: ".d-gjc-normal"
    output: "justify-content: normal;"
    description: "Resets the layout mode to the normal behavior, which for grid items typically means a behavior similar to stretch."
  - class: ".d-gjc-end"
    output: "justify-content: end;"
    description: "Grid items are placed toward the container's end edge along the appropriate axis."
  - class: ".d-gjc-center"
    output: "justify-content: center;"
    description: "Grid items are placed toward the container's center along the appropriate axis."
  - class: ".d-gjc-space-around"
    output: "justify-content: space-around;"
    description: "Grid items are evenly distributed along the appropriate axis. The space between the first and last items are half of the space between each pair of adjacent items."
  - class: ".d-gjc-space-between"
    output: "justify-content: space-between;"
    description: "Grid items are evenly distributed along the appropriate axis. There is no spacing between the first and last items."
  - class: ".d-gjc-space-evenly"
    output: "justify-content: space-evenly;"
    description: "Grid items are evenly distributed across all available space, including the first and last item."
  - class: ".d-gjc-start"
    output: "justify-content: start;"
    description: "Grid items are placed toward the container's start edge along the appropriate axis."
  - class: ".d-gjc-stretch"
    output: "justify-content: stretch;"
    description: "Grid items containers are stretched equally (not proportionally) so that exactly fill the alignment contianer."
  - class: ".d-gjc-unset"
    output: "justify-content: unset;"
    description: "Resets the value to either it's initial value or inherited value."

grid-gal:
  - class: ".d-gal-normal"
    output: "align-content: normal;"
    description: "Resets the layout mode to the normal behavior, which for grid items typically means a behavior similar to stretch."
  - class: ".d-gal-end"
    output: "align-content: end;"
    description: "Grid items are placed toward the container's end edge along the appropriate axis."
  - class: ".d-gal-center"
    output: "align-content: center;"
    description: "Grid items are placed toward the container's center along the appropriate axis."
  - class: ".d-gal-space-around"
    output: "align-content: space-around;"
    description: "Grid items are evenly distributed along the appropriate axis. The space between the first and last items are half of the space between each pair of adjacent items."
  - class: ".d-gal-space-between"
    output: "align-content: space-between;"
    description: "Grid items are evenly distributed along the appropriate axis. There is no spacing between the first and last items."
  - class: ".d-gal-space-evenly"
    output: "align-content: space-evenly;"
    description: "Grid items are evenly distributed across all available space, including the first and last item."
  - class: ".d-gal-start"
    output: "align-content: start;"
    description: "Grid items are placed toward the container's start edge along the appropriate axis."
  - class: ".d-gal-stretch"
    output: "align-content: stretch;"
    description: "Grid items containers are stretched equally (not proportionally) so that exactly fill the alignment contianer."
  - class: ".d-gal-unset"
    output: "align-content: unset;"
    description: "Resets the value to either it's initial value or inherited value."

grid-gpc:
  - class: ".d-gpc-end"
    output: "place-content: end;"
    description: "Grid items are placed toward the container's end edge along the appropriate axis."
  - class: ".d-gpc-center"
    output: "place-content: center;"
    description: "Grid items are placed toward the container's center along the appropriate axis."
  - class: ".d-gpc-space-around"
    output: "place-content: space-around;"
    description: "Grid items are evenly distributed along the appropriate axis. The space between the first and last items are half of the space between each pair of adjacent items."
  - class: ".d-gpc-space-between"
    output: "place-content: space-between;"
    description: "Grid items are evenly distributed along the appropriate axis. There is no spacing between the first and last items."
  - class: ".d-gpc-space-evenly"
    output: "place-content: space-evenly;"
    description: "Grid items are evenly distributed across all available space, including the first and last item."
  - class: ".d-gpc-start"
    output: "place-content: start;"
    description: "Grid items are placed toward the container's start edge along the appropriate axis."
  - class: ".d-gpc-stretch"
    output: "place-content: stretch;"
    description: "Grid items containers are stretched equally (not proportionally) so that exactly fill the alignment contianer."
  - class: ".d-gpc-value"
    output: "place-content: var(--gpc);"
    description: "Use this class if you want to set different property values for the inline (row) and block (column) axis."
  - class: ".d-gpc-unset"
    output: "place-content: unset;"
    description: "Resets the value to either it's initial value or inherited value."

grid-gjs:
  - class: ".d-gjs-auto"
    output: "justify-self: auto;"
    description: "Uses the justify-items property value of the grid parent, unless the box has no parent or is absolutely positioned, in which case auto is set to normal."
  - class: ".d-gjs-end"
    output: "justify-self: end;"
    description: "The grid item is placed toward the container's end edge along the appropriate axis."
  - class: ".d-gjs-center"
    output: "justify-self: center;"
    description: "The grid item is placed toward the container's center along the appropriate axis."
  - class: ".d-gjs-start"
    output: "justify-self: start;"
    description: "The grid item is placed toward the container's start edge along the appropriate axis."
  - class: ".d-gjs-stretch"
    output: "justify-self: stretch;"
    description: "The grid item is stretched equally (not proportionally) so that exactly fill the alignment contianer."
  - class: ".d-gjs-unset"
    output: "justify-self: unset;"
    description: "Resets the value to either it's initial value or inherited value."

grid-gas:
  - class: ".d-gas-auto"
    output: "align-self: auto;"
    description: "Uses the justify-items property value of the grid parent, unless the box has no parent or is absolutely positioned, in which case auto is set to normal."
  - class: ".d-gas-end"
    output: "align-self: end;"
    description: "The grid item is placed toward the container's end edge along the appropriate axis."
  - class: ".d-gas-center"
    output: "align-self: center;"
    description: "The grid item is placed toward the container's center along the appropriate axis."
  - class: ".d-gas-start"
    output: "align-self: start;"
    description: "The grid item is placed toward the container's start edge along the appropriate axis."
  - class: ".d-gas-stretch"
    output: "align-self: stretch;"
    description: "The grid item is stretched equally (not proportionally) so that exactly fill the alignment contianer."
  - class: ".d-gas-unset"
    output: "align-self: unset;"
    description: "Resets the value to either it's initial value or inherited value."

grid-gps:
  - class: ".d-gps-auto"
    output: "place-self: auto;"
    description: "Uses the justify-items property value of the grid parent, unless the box has no parent or is absolutely positioned, in which case auto is set to normal."
  - class: ".d-gps-end"
    output: "place-self: end;"
    description: "The grid item is placed toward the container's end edge along the appropriate axis."
  - class: ".d-gps-center"
    output: "place-self: center;"
    description: "The grid item is placed toward the container's center along the appropriate axis."
  - class: ".d-gps-start"
    output: "place-self: start;"
    description: "The grid item is placed toward the container's start edge along the appropriate axis."
  - class: ".d-gps-stretch"
    output: "place-self: stretch;"
    description: "The grid item is stretched equally (not proportionally) so that exactly fill the alignment contianer."
  - class: ".d-gps-value"
    output: "place-self: var(--gps);"
    description: "Use this class to set the grid item's inline (row) and block (column) axis."
  - class: ".d-gps-unset"
    output: "place-self: unset;"
    description: "Resets the value to either it's initial value or inherited value."
