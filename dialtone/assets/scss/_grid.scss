$grid-columns: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12;

@mixin grid-fixed-cell-spacing($value) {
    @each $col in $grid-columns {
        $cell-width: $col * 100% / $col;

        > .grid--cell#{$col} {
            margin: $value / 2;
        }

        //  ------------------------------------------------------------------------
        //  [1] FIXED WIDTH CELLS
        //      This makes the fixed width cells to account for gutters.
        //
        //  [2] UNIFORM CHILD GRID CELLS
        //      This class allows you to uniformly state the width of `.grid--cell`
        //      divs within a `.grid` element. In particular we adjust the flex-basis
        //      and max-width here to account for gutters.
        //  ------------------------------------------------------------------------
        > .grid--cell#{$col},                                  // [1]
        &.grid__allcells#{$col} > .grid,                       // [2]
        &.grid__allcells#{$col} > .grid--cell {                // [2]
            flex-basis: calc(#{$col} - #{$value});
        }
    }
}

//  ----------------------------------------------------------------------------
//      2.  Generate the desired gutters
//          We halve the spacing value because the spacing value should be the
//          total space between cells--not the total applied to each cell,
//          which would effectively double the desired total.
//
//          The "when" statements here refer to when we declare it's for a
//          row (default) or a column. When a column we need to reset the
//          left and right margins and add in top and bottom margins.
//  ----------------------------------------------------------------------------
@mixin gutter-spacing($values) {
    @each $var in $values {
        .gs#{$var} {
            margin: -(#{$var} / 2);

            //  --  FLUID CELLS
            > .grid,
            > .grid--cell {
                margin: #{$var} / 2;
            }

            @include grid-fixed-cell-spacing(#{$var});
        }
    }
}

//  ============================================================================
//  $   GRID ELEMENTS
//  ============================================================================
//      To help simplify our CSS, we create a generic box container. By default
//      this is a row container, but we can modify the box to become a column.
//  ----------------------------------------------------------------------------
.grid {
    display: flex;
}

//  --  UNIVERSAL FLEX WIDTHS
//      This applies a flex value it to all of a grid's direct children.
//  --------------------------------------------------------------------------
.grid__fl0 {
    &,
    > .grid,
    > .grid--cell {
        flex: 0 auto;
    }
}
.grid__fl1 {
    &,
    > .grid,
    > .grid--cell {
        flex: 1 auto;
    }
}


//  ============================================================================
//  $   GRID SPACING
//      Insert spaces or gutters in between grid cells
//  ----------------------------------------------------------------------------
@include gutter-spacing("2" "4" "6" "8" "12" "16" "24" "32" "48" "64");

//  On rows, remove top and bottom margins
.gsx {
    &,
    > .grid,
    > [class*="grid--cell"] {
        margin-top: 0;
        margin-bottom: 0;
    }
}

//  On columns, remove left and right margins
.gsy {
    &,
    > .grid,
    > [class*="grid--cell"] {
        margin-right: 0;
        margin-left: 0;
    }
}
