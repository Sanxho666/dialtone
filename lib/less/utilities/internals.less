//
//  DIALTONE
//  INTERNAL MIXINS
//
//  These are internal mixins to help generate various classes.
//
//  TABLE OF CONTENTS
//  â€¢ AUTO GENERATING CLASSES
//
//  ============================================================================
//  $   AUTO GENERATING CLASSES
//      This mixin tool is used to help generate a bunch of related classes,
//      usually utility classes.
//  ----------------------------------------------------------------------------
#auto-generate(@class-prefix, @rules, @values) {
    #auto-generate-with-index(@class-prefix, @rules, 1, @values);
}
#auto-generate-with-index(@class-prefix, @rules, @index, @values) when (@index <= length(@values)) {
    // Extract our values
    @val: extract(@values, @index);

    //  When our values are numeric...
    & when (isnumber(@val)) {
        @px: (@val * 10); // Convert rem values to px equilavent
        @unitless: unit(@px);

        //  ...and less than 0
        & when (@unitless < 0) {
            @abs: abs(@unitless);
            @class-name: ~"@{class-prefix}n@{abs}";

            @{class-name} { @rules(); .template(@val); }
        }

        //  ...and equal to or greater than 0
        & when (@unitless >= 0) {
            @class-name: ~"@{class-prefix}@{unitless}";

            @{class-name} { @rules(); .template(@val); }
        }
    }

    //  When our values aren't numeric...
    & when not (isnumber(@val)) {
        @class-name: ~"@{class-prefix}-@{val}";

        @{class-name} { @rules(); .template(@val); }
    }

    #auto-generate-with-index(@class-prefix, @rules, @index + 1, @values);
}

#auto-generate-no-convert(@class-prefix, @rules, @values) {
    #auto-generate-with-index-no-convert(@class-prefix, @rules, 1, @values);
}
#auto-generate-with-index-no-convert(@class-prefix, @rules, @index, @values) when (@index <= length(@values)) {
    // Extract our values
    @val: extract(@values, @index);

    //  When our values are numeric...
    & when (isnumber(@val)) {
        @class-name: ~"@{class-prefix}@{val}";

        @{class-name} { @rules(); .template(@val); }
    }

    //  When our values aren't numeric...
    & when not (isnumber(@val)) {
        @class-name: ~"@{class-prefix}-@{val}";

        @{class-name} { @rules(); .template(@val); }
    }

    #auto-generate-with-index-no-convert(@class-prefix, @rules, @index + 1, @values);
}

//  ============================================================================
//  $   GET HSL VALUES
//  ----------------------------------------------------------------------------
#hsl-to-css-vars(@name, @value) {
    --@{name}-h: hue(@value);
    --@{name}-s: saturation(@value);
    --@{name}-l: lightness(@value);
    --@{name}-hsl: var(~"--@{name}-h") var(~"--@{name}-s") var(~"--@{name}-l");
}
