//
//  DIALTONE
//  UTILITIES: GRID
//
//  These are the CSS grid utility classes for Dialpad's design system Dialtone.
//  For further documentation of these and other classes,
//  visit https://dialpad.design/utilities/grid
//
//  TABLE OF CONTENTS
//  • Container
//  • Layouts
//  • Areas
//  • Spans
//  • Gutters
//
//  ============================================================================
//  $   GRID CSS VARIABLES
//  ----------------------------------------------------------------------------
@grid-vars: {
    //  Grid Layout Variables
    sidebar-width:              minmax(20rem, 30rem);
    content-width:              minmax(32rem, max-content);
    header-height:              minmax(6.4rem, min-content);
    content-height:             minmax(64rem, max-content);

    //  Grid Columns
    grid-columns:               12;
    grid-column-width:          minmax(min-content, 24rem);
    grid-column-auto:           1fr;
}


//  ============================================================================
//  $   DISPLAY
//  ----------------------------------------------------------------------------
.d-d-grid   { display: grid !important; }

//  ============================================================================
//  $   GRID LAYOUTS
//  ----------------------------------------------------------------------------
.d-g-columns {
    display: grid;
    grid-template-columns: [full-start] repeat(var(--grid-columns), [col-start] var(--grid-column-width) [col-end]) [full-end];
    grid-auto-columns: var(--grid-column-auto);
}

.d-g-sidebar {
    display: grid;
    grid-template-areas: "sidebar content";
    grid-template-columns: [sidebar-start] var(--sidebar-width) [sidebar-end content-start] var(--content-width) [content-end];
}

.d-g-header {
    display: grid;
    grid-template-areas: "header"
                         "content";
    grid-template-rows: [header-start] var(--header-height) [header-end content-start] var(--content-height) [content-end];
    grid-auto-rows: 1fr;
    grid-auto-columns: minmax(min-content, auto);
}

//  ============================================================================
//  $   GRID COLUMNS
//  ----------------------------------------------------------------------------
.d-g-columns1           { --grid-columns: 1; }
.d-g-columns2           { --grid-columns: 2; }
.d-g-columns3           { --grid-columns: 3; }
.d-g-columns4           { --grid-columns: 4; }
.d-g-columns5           { --grid-columns: 5; }
.d-g-columns6           { --grid-columns: 6; }
.d-g-columns7           { --grid-columns: 7; }
.d-g-columns8           { --grid-columns: 8; }
.d-g-columns9           { --grid-columns: 9; }
.d-g-columns10          { --grid-columns: 10; }
.d-g-columns11          { --grid-columns: 11; }


//  ============================================================================
//  $   GRID GAP
//  ============================================================================
//      Defines the size of grid "gaps" (lines). We generate a gap for
//      each defined spacing unit.
//  ----------------------------------------------------------------------------
//  All Gaps
.d-gg0                  { grid-gap: var(--su0) !important; }
.d-gg1                  { grid-gap: var(--su1) !important; }
.d-gg2                  { grid-gap: var(--su2) !important; }
.d-gg4                  { grid-gap: var(--su4) !important; }
.d-gg6                  { grid-gap: var(--su6) !important; }
.d-gg8                  { grid-gap: var(--su8) !important; }
.d-gg12                 { grid-gap: var(--su12) !important; }
.d-gg16                 { grid-gap: var(--su16) !important; }
.d-gg24                 { grid-gap: var(--su24) !important; }
.d-gg32                 { grid-gap: var(--su32) !important; }
.d-gg48                 { grid-gap: var(--su48) !important; }
.d-gg64                 { grid-gap: var(--su64) !important; }

//  Row Gaps
.d-grg0                 { grid-row-gap: var(--su0) !important; }
.d-grg1                 { grid-row-gap: var(--su1) !important; }
.d-grg2                 { grid-row-gap: var(--su2) !important; }
.d-grg4                 { grid-row-gap: var(--su4) !important; }
.d-grg6                 { grid-row-gap: var(--su6) !important; }
.d-grg8                 { grid-row-gap: var(--su8) !important; }
.d-grg12                { grid-row-gap: var(--su12) !important; }
.d-grg16                { grid-row-gap: var(--su16) !important; }
.d-grg24                { grid-row-gap: var(--su24) !important; }
.d-grg32                { grid-row-gap: var(--su32) !important; }
.d-grg48                { grid-row-gap: var(--su48) !important; }
.d-grg64                { grid-row-gap: var(--su64) !important; }

//  Column Gaps
.d-gcg0                 { grid-column-gap: var(--su0) !important; }
.d-gcg1                 { grid-column-gap: var(--su1) !important; }
.d-gcg2                 { grid-column-gap: var(--su2) !important; }
.d-gcg4                 { grid-column-gap: var(--su4) !important; }
.d-gcg6                 { grid-column-gap: var(--su6) !important; }
.d-gcg8                 { grid-column-gap: var(--su8) !important; }
.d-gcg12                { grid-column-gap: var(--su12) !important; }
.d-gcg16                { grid-column-gap: var(--su16) !important; }
.d-gcg24                { grid-column-gap: var(--su24) !important; }
.d-gcg32                { grid-column-gap: var(--su32) !important; }
.d-gcg48                { grid-column-gap: var(--su48) !important; }
.d-gcg64                { grid-column-gap: var(--su64) !important; }


//  ============================================================================
//  $   GRID COLUMN SPANS
//  ----------------------------------------------------------------------------
.d-gc-span1             { grid-column-start: span 1 !important; }
.d-gc-span2             { grid-column-start: span 2 !important; }
.d-gc-span3             { grid-column-start: span 3 !important; }
.d-gc-span4             { grid-column-start: span 4 !important; }
.d-gc-span5             { grid-column-start: span 5 !important; }
.d-gc-span6             { grid-column-start: span 6 !important; }
.d-gc-span7             { grid-column-start: span 7 !important; }
.d-gc-span8             { grid-column-start: span 8 !important; }
.d-gc-span9             { grid-column-start: span 9 !important; }
.d-gc-span10            { grid-column-start: span 10 !important; }
.d-gc-span11            { grid-column-start: span 11 !important; }
.d-gc-span12            { grid-column-start: span 12 !important; }


//  ============================================================================
//  $   GRID AREAS
//  ----------------------------------------------------------------------------
.d-ga--sidebar          { grid-area: sidebar !important; }
.d-ga--content          { grid-area: content !important; }
.d-ga--header           { grid-area: header !important; }
