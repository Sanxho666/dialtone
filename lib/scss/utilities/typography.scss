//
//  DIALTONE
//  UTILTIES: TYPOGRAPHY
//
//  These are utility typography classes for Dialpad's design system Dialtone.
//  For further documentation of these and other classes,
//  visit https://dialpad.design/utilties/typography
//
//  TABLE OF CONTENTS
//  • Header resets
//  • Font sizes
//  • Font weight
//  • Font styles
//  • Text transform
//  • Text alignment
//  • Line height
//
//  ============================================================================
//  $   FONT FACE
//  ----------------------------------------------------------------------------
$ff-styles: (
    200: MarkWeb-Light,
    400: MarkWeb,
    500: MarkWeb-Medium,
    700: MarkWeb-Bold,
);
@each $key, $name in $ff-styles {
    @font-face {
        font-weight: $key;
        font-family: "#{$name}";
        src: url("../fonts/#{$name}.eot") format("eof"),
             url("../fonts/#{$name}.woff") format("woff");
    }
}

//  ============================================================================
//  $$  FONT STYLE CLASSES
//  ----------------------------------------------------------------------------
.ff-mark-light      { font-weight: 200; font-family: $ff-mark-light !important; }
.ff-mark            { font-family: $ff-mark !important; }
.ff-mark-medium     { font-weight: 500; font-family: $ff-mark-medium !important; }
.ff-mark-bold       { font-weight: 700; font-family: $ff-mark-bold !important; }
.ff-sans            { font-family: $ff-sans !important; }
.ff-mono            { font-family: $ff-mono !important; }


//  ============================================================================
//  $   HEADER RESETS
//  ----------------------------------------------------------------------------
h1, h2, h3, h4, h5, h6, p {
    margin-top: 0;
}

//  ============================================================================
//  $   SIZES
//  ----------------------------------------------------------------------------
.fs-display     { font-size: $fs-display !important; }
.fs-title       { font-size: $fs-title !important; }
.fs-headline    { font-size: $fs-headline !important; }
.fs-subheading  { font-size: $fs-subheading !important; }
.fs-body2       { font-size: $fs-body2 !important; }
.fs-body1       { font-size: $fs-body1 !important; }
.fs-caption     { font-size: $fs-caption !important; }
.fs-fine        { font-size: $fs-fine !important; }
.fs-caps        { text-transform: $tt-uppercase; font-size: $fs-caps !important; }


//  ============================================================================
//  $$  FONT WEIGHT
//  ----------------------------------------------------------------------------
.fw-light       { font-weight: $fw-light; }
.fw-normal      { font-weight: $fw-normal; }
.fw-medium      { font-weight: $fw-medium; }
.fw-bold        { font-weight: $fw-bold; }

//  Correctly assign the font-face for HTML tags that are bold by default
h1, h2, h3, h4, h5, h6,
strong,
table th {
    font-weight: 700;
    font-family: $ff-mark-bold;
}


//  ============================================================================
//  $$  FONT STYLES
//  ----------------------------------------------------------------------------
.fs-normal      { font-style: normal; }
.fs-italic      { font-style: italic; }
.fs-unset       { font-style: unset; }


//  ============================================================================
//  $   TEXT TRANSFORM
//  ----------------------------------------------------------------------------
.tt-capitalize  { text-transform: $tt-capitalize; }
.tt-lowercase   { text-transform: $tt-lowercase; }
.tt-uppercase   { text-transform: $tt-uppercase; }
.tt-none        { text-transform: $tt-none; }
.tt-unset       { text-transform: $tt-unset; }


//  ============================================================================
//  $   TEXT ALIGN
//  ----------------------------------------------------------------------------
@each $breakpoint, $variant in $rwd-variants {
    @include rwd($breakpoint) {
        .#{$variant}ta-left     { text-align: left !important; }
        .#{$variant}ta-center   { text-align: center !important; }
        .#{$variant}ta-right    { text-align: right !important; }
        .#{$variant}ta-justify  { text-align: justify !important; }
        .#{$variant}ta-unset    { text-align: unset !important; }
    }
}


//  ============================================================================
//  $   FONT COLOR
//  ----------------------------------------------------------------------------
@each $key, $value in $color-steps {
    .fc-#{$key} { color: $value !important; }

    // Gray text colors
    .fc-dark    { color: $gray-100 !important; }
    .fc-medium  { color: $gray-080 !important; }
    .fc-light   { color: $gray-060 !important; }
}


//  ============================================================================
//  $$  LINE HEIGHTS
//  ----------------------------------------------------------------------------
.lh-xs          { line-height: $lh-xs; }
.lh-sm          { line-height: $lh-sm; }
.lh-md          { line-height: $lh-md; }
.lh-lg          { line-height: $lh-lg; }
.lh-xl          { line-height: $lh-xl; }
.lh-lg          { line-height: $lh-lg; }


//  ============================================================================
//  $$  WHITE SPACE
//  ----------------------------------------------------------------------------
@each $breakpoint, $variant in $rwd-variants {
    @include rwd($breakpoint) {
        .#{$variant}ws-normal      { white-space: normal; }
        .#{$variant}ws-nowrap      { white-space: nowrap; }
        .#{$variant}ws-pre         { white-space: pre; }
        .#{$variant}ws-pre-wrap    { white-space: pre-wrap; }
        .#{$variant}ws-pre-line    { white-space: pre-line; }
        .#{$variant}ws-inherit     { white-space: inherit; }
        .#{$variant}ws-initial     { white-space: initial; }
        .#{$variant}ws-unset       { white-space: unset; }
    }
}

//  ============================================================================
//  $$  OVERFLOW WORD
//  ----------------------------------------------------------------------------
@each $breakpoint, $variant in $rwd-variants {
    @include rwd($breakpoint) {
        .#{$variant}ow-normal      { overflow-wrap: normal; }
        .#{$variant}ow-break-word  { overflow-wrap: break-word; }
        .#{$variant}ow-anywhere    { overflow-wrap: anywhere; }
        .#{$variant}ow-inherit     { overflow-wrap: inherit; }
        .#{$variant}ow-initial     { overflow-wrap: initial; }
        .#{$variant}ow-unset       { overflow-wrap: unset; }
    }
}


//  ============================================================================
//  $$  WORD BREAK
//  ----------------------------------------------------------------------------
@each $breakpoint, $variant in $rwd-variants {
    @include rwd($breakpoint) {
        .#{$variant}wb-normal      { word-break: normal; }
        .#{$variant}wb-break-all   { word-break: break-all; }
        .#{$variant}wb-break-word  { word-break: break-word; }
        .#{$variant}wb-keep-all    { word-break: keep-all; }
        .#{$variant}wb-inherit     { word-break: inherit; }
        .#{$variant}wb-initial     { word-break: initial; }
        .#{$variant}wb-unset       { word-break: unset; }
        .#{$variant}truncate {
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }
    }
}
