//
//  DIALTONE
//  UTILITIES: GRID
//
//  These are the CSS grid utility classes for Dialpad's design system Dialtone.
//  For further documentation of these and other classes,
//  visit https://dialpad.design/utilities/grid
//
//  TABLE OF CONTENTS
//  • Variables / Constants
//  • Container
//  • Layouts
//  • Areas
//  • Spans
//  • Gutters
//
//  ============================================================================
:root {
    --nav-sidebar-min-width:    auto;
    --nav-sidebar-max-width:    15rem;
    --content-min-width:        auto;
    --content-max-width:        50rem;
}

$grid-columns:      1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 !default;

//  ============================================================================
//  $   GRID CONTAINER
//  ----------------------------------------------------------------------------
.grid {
    display: grid;
    grid-template-columns: [full-start] repeat(auto-fit, [col-start] minmax(5rem, 1fr) [col-end]) [full-end];
}

//  ============================================================================
//  $   GRID LAYOUTS
//  ============================================================================
//  $$  ROWS & COLUMNS
//  ----------------------------------------------------------------------------
//  TBD

//  $$  COLUMNS
//  ----------------------------------------------------------------------------
.grid--col {
    display: grid;
    grid-template-columns:
        [full-start]
            repeat(var(--cols, 12), [col-start] minmax(5rem, 1fr) [col-end])
        [full-end];
    grid-auto-columns: minmax(5rem, 1fr);
}

.grid--col1\:2 {
    display: grid;
    grid-template-columns:
        [full-start left-start]
            minmax(var(--nav-sidebar-min-width, auto), var(--nav-sidebar-max-width, 1fr))
        [left-end content-start]
            minmax(var(--content-min-width, 3fr), var(--content-max-width, max-content))
        [content-end full-end];
}

//  $$  ROWS
//  ----------------------------------------------------------------------------
.grid--row {
    display: grid;
    grid-auto-rows: [row-start] 1fr [row-end];
}
.grid--row1\:2 {
    display: grid;
    grid-template-rows:
        [header-start]
            var(--header-height, min-content)
        [header-end content-start]
            var(--content-height, auto)
        [content-end];
    grid-auto-rows: 1fr;
    grid-template-areas:
        "header"
        "content";
}


//  ============================================================================
//  $   GRID AREAS
//  ----------------------------------------------------------------------------
.grid__full     { grid-area: full; }
.grid__content  { grid-area: content;}


//  ============================================================================
//  $   GRID SPANS
//  ----------------------------------------------------------------------------
.grid-colspan {
    grid-column: span var(--col-span, 1);
}

.grid-rowspan {
    grid-row: span var(--row-span, 1);
}

@each $value in $grid-columns {
    .grid__col-span#{$value} { grid-column: span $value; }
}
@each $value in $grid-columns {
    .grid__row-span#{$value} { grid-row: span $value; }
}


//  ============================================================================
//  $   GRID GUTTERS
//  ----------------------------------------------------------------------------
@each $breakpoint, $variant in $rwd-variants {
    @include rwd($breakpoint) {
        @each $key, $space in $spacing-units {
            .#{$variant}gg#{$key} { grid-gap: $space; }
        }

        .#{$variant}ggx { grid-row-gap: 0; }
        .#{$variant}ggy { grid-column-gap: 0; }
    }
}


//  ============================================================================
//  $   GRID UTILITIES
//  ----------------------------------------------------------------------------
@each $breakpoint, $variant in $rwd-variants {
    @include rwd($breakpoint) {
        // .#{$variant}grid                    { display: grid; }
        .#{$variant}grid-inline             { display: grid-inline; }
    }
}
